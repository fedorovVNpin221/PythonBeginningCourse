# Домашнее задание №4 
# Разработать 7 отдельных функций, каждая решает свою задачу.
# Все функции должны вызываться из меню в главной функции main(),
# реализованного по аналогии с файлом tasks_1-5.py

# Задача №1 - "Лесенка чисел"
# Требуется:
# 1. Запросить у пользователя целое число N (например, 5)
# 2. Вывести числа в виде лесенки, где каждая строка содержит числа от 1 до текущего номера строки:
# Пример для N=5:
# 1 
# 12
# 123
# 1234
# 12345

# Задача №2 - "Таблица умножения с пропусками"
# Требуется:
# 1. Запросить у пользователя число K (пропуск кратных этому числу)
# 2. Вывести таблицу умножения 10x10, пропуская все произведения, кратные K
# 3. На месте пропущенных значений можно выводить "--" или оставлять пустое место

# Задача №3 - "Простые числа до N"
# Требуется:
# 1. Запросить у пользователя целое число N (N > 1)
# 2. Вывести все простые числа от 2 до N включительно
# 3. Простое число - число, которое делится только на 1 и на себя

# Задача №4 - "Минимумы в подсписках"
# Требуется:
# 1. Иметь заранее заданный список списков (минимум 3 подсписка)
# 2. Для каждого подсписка найти минимальное число
# 3. Вывести найденные минимумы
# Пример:
# Вход: [[3, 5, 1], [8, 2, 4], [9, 6, 0]]
# Выход: [1, 2, 0]

# Задача №5 - "Генератор паролей"
# Требуется:
# 1. Запросить у пользователя длину пароля L (L >= 2)
# 2. Сгенерировать пароль длины L, где буквы (a-z, A-Z) и цифры (0-9) чередуются
# 3. Пароль должен начинаться либо с буквы, либо с цифры (по выбору программы)
# 4. Вывести полученный пароль

# Задача №6 - "Подсписки с отрицательными числами"
# Требуется:
# 1. Иметь заранее заданную матрицу (список списков):
#    - Минимум 5 подсписков
#    - В каждом подсписке минимум 10 чисел
# 2. Подсчитать количество подсписков, содержащих хотя бы одно отрицательное число
# 3. Вывести это количество

# Задача №7 - "Подсписки с повторениями"
# Требуется:
# 1. Иметь заранее заданную матрицу (список списков):
#    - Минимум 10 подсписков
#    - В каждом подсписке минимум 15 чисел
# 2. Подсчитать количество подсписков, содержащих хотя бы одно повторяющееся число
#    (число, которое встречается в подсписке более одного раза)
# 3. Вывести это количество