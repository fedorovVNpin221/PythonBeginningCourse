# Домашнее задание №4 
# Разработать 7 отдельных функций, каждая решает свою задачу.
# Все функции должны вызываться из меню в главной функции main(),
# реализованного по аналогии с файлом tasks_1-5.py

# Задача №1 - "Лесенка чисел"
# Требуется:
# 1. Запросить у пользователя целое число N (например, 5)
# 2. Вывести числа в виде лесенки, где каждая строка содержит числа от 1 до текущего номера строки:
# Пример для N=5:
# 1 
# 12
# 123
# 1234
# 12345
def task1():
    N = int(input("Введите число N -> "))
    
    for i in range(1, N + 1):
        for j in range(1, i + 1):
            print(j, end='')
        print() 

# Задача №2 - "Таблица умножения с пропусками"
# Требуется:
# 1. Запросить у пользователя число K (пропуск кратных этому числу)
# 2. Вывести таблицу умножения 10x10, пропуская все произведения, кратные K
# 3. На месте пропущенных значений можно выводить "--" или оставлять пустое место
def task2():
    K = int(input("Введите число К, кратные которому будут пропущены -> "))

    for i in range(1, 10):
        for j in range(1, 10):
            if (i * j) % K == 0:
                print("------------")
            else:
                print(f"{i} * {j} = {i * j}")
        print()

# Задача №3 - "Простые числа до N"
# Требуется:
# 1. Запросить у пользователя целое число N (N > 1)
# 2. Вывести все простые числа от 2 до N включительно
# 3. Простое число - число, которое делится только на 1 и на себя
def task3():
    N = int(input("Введите число N (N > 1) -> "))
    
    prime_numbers = []
    
    for num in range(2, N + 1):
        divisors = 0

        for i in range(1, num + 1):
            if num % i == 0:
                divisors += 1
                
        if divisors == 2:
            prime_numbers.append(num)
    
    print(f"Простые числа от 2 до {N}: {prime_numbers}")

# Задача №4 - "Минимумы в подсписках"
# Требуется:
# 1. Иметь заранее заданный список списков (минимум 3 подсписка)
# 2. Для каждого подсписка найти минимальное число
# 3. Вывести найденные минимумы
# Пример:
# Вход: [[3, 5, 1], [8, 2, 4], [9, 6, 0]]
# Выход: [1, 2, 0]
def task4():
    spisok = [
        [3, 5, 1], 
        [8, 2, 4],
        [9, 6, 0]
    ]
    finalSpisok = []

    for subspisok in spisok:
        for i in range(1, len(subspisok) - 1):
            if subspisok[i] > subspisok[i + 1]:
                currentMin = subspisok[i + 1]
            else:
                currentMin = subspisok[i]
        finalSpisok.append(currentMin)

    print(finalSpisok)

# Задача №5 - "Генератор паролей"
# Требуется:
# 1. Запросить у пользователя длину пароля L (L >= 2)
# 2. Сгенерировать пароль длины L, где буквы (a-z, A-Z) и цифры (0-9) чередуются
# 3. Пароль должен начинаться либо с буквы, либо с цифры (по выбору программы)
# 4. Вывести полученный пароль
def task5():
    latinUppercase = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 
                    'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
    latinLowercase = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',
                    'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
    latinLetters = latinUppercase + latinLowercase

    arabicDigits = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']

    password = []

    N = int(input('Введите длину пароля -> '))
    
    for i in range(N):
        if i < len(latinLetters):
            password.append(latinLetters[i])
        if i < len(arabicDigits):
            password.append(arabicDigits[i])
            print(password)
    
# Задача №6 - "Подсписки с отрицательными числами"
# Требуется:
# 1. Иметь заранее заданную матрицу (список списков):
#    - Минимум 5 подсписков
#    - В каждом подсписке минимум 10 чисел
# 2. Подсчитать количество подсписков, содержащих хотя бы одно отрицательное число
# 3. Вывести это количество
def task6():
    matrix = [
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
        [-1, 2, 3, 4, -5, 6, 7, -8, 9, 10],
        [1, -2, 3, 4, -5, 6, 7, 8, 9, 10],
        [1, 2, 3, 4, 5, -6, 7, 8, 9, 10],
        [1, 2, -3, 4, 5, 6, 7, 8, 9, -10],
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    ]
    count = 0 

    for sublist in matrix:
        for number in sublist:
            if number < 0:
                count += 1
                break

    print(f"Матрица содержит {count} списков с отрицательными числами")

# Задача №7 - "Подсписки с повторениями"
# Требуется:
# 1. Иметь заранее заданную матрицу (список списков):
#    - Минимум 10 подсписков
#    - В каждом подсписке минимум 15 чисел
# 2. Подсчитать количество подсписков, содержащих хотя бы одно повторяющееся число
#    (число, которое встречается в подсписке более одного раза)
# 3. Вывести это количество
def task7():
    matrix = [
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
        [1, 2, 3, 4, 5, 6, 7, 7, 9, 10, 11, 12, 13, 14, 15],
        [1, 2, 3, 4, 5, 6, 7, 7, 9, 10, 11, 12, 13, 14, 15],
        [1, 2, 3, 4, 5, 6, 7, 7, 9, 10, 11, 12, 13, 14, 15],
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
        [1, 2, 3, 4, 5, 6, 7, 7, 9, 10, 11, 12, 13, 14, 15],
        [1, 2, 3, 4, 5, 6, 7, 7, 9, 10, 11, 12, 13, 14, 15],
        [1, 2, 3, 4, 5, 6, 7, 7, 9, 10, 11, 12, 13, 14, 15],
        [1, 2, 3, 4, 5, 6, 7, 7, 9, 10, 11, 12, 13, 14, 15]
    ]
    count = 0

    for sublist in matrix:
        if len(sublist) != len(set(sublist)):
            count += 1

    print(count)

def main():
    while True:
        try:
            choice = int(input("Выберите программу (1-7): "))
            
            if choice == 1:
                print("Программа 'Лесенка чисел'")
                task1()
            elif choice == 2:
                print("Программа 'Таблица умножения с пропусками'")
                task2()
            elif choice == 3:
                print("Программа 'Простые числа до N'")
                task3()
            elif choice == 4:
                print("Программа 'Минимумы в подсписках'")
                task4()
            elif choice == 5:
                print("Программа 'Генератор паролей'")
                task5()
            elif choice == 6:
                print("Программа 'Подсписки с отрицательными числами'")
                task6()
            elif choice == 7:
                print("Программа 'Подсписки с повторениями'")
                task7()
            else:
                print("Пожалуйста, введите число от 1 до 5")
                
        except ValueError:
            print("Ошибка: пожалуйста, введите целое число от 1 до 5")

if __name__ == "main":
    main()